// Main.jsx
import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import '../css/Main.css';
import Header from './header';
import Footer from './footer';

function Main() {
  const navigate = useNavigate();
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [modalVisible, setModalVisible] = useState(false);
  const [modalTitle, setModalTitle] = useState('');
  const [modalContent, setModalContent] = useState('');

  const openModal = (title, content) => {
    setModalTitle(title);
    setModalContent(content);
    setModalVisible(true);
  };

  const closeModal = () => setModalVisible(false);

  const badges = [
    { emoji: 'ü•á', label: 'Îâ¥Ïä§ ÎßàÏä§ÌÑ∞', gradient: 'yellow' , active:true},
    { emoji: 'üîç', label: 'Ìå©Ìä∏Ï≤¥Ïª§', gradient: 'blue', active:true },
    { emoji: '‚öñÔ∏è', label: 'Í≥µÏ†ïÌïú Îàà', gradient: 'purple', active:true },
    { emoji: 'üéØ', label: 'Ï†ïÌôïÎèÑÏôï', gradient: null, active:false },
    { emoji: 'üöÄ', label: 'Ïä§ÌîºÎìúÎü∞ÎÑà', gradient: null, active:false },
    { emoji: 'üëë', label: 'Î¨∏Ìï¥Î†•Ïôï', gradient: null, active:false },
  ];

  const rankings = [
    { rankEmoji: 'ü•á', name: 'ÍπÄÎ¨∏Ìï¥', school: 'ÏÑúÏö∏Í≥†Îì±ÌïôÍµê', score: 2850, color: 'yellow' },
    { rankEmoji: 'ü•à', name: 'Ïù¥Ìå©Ìä∏', school: 'Î∂ÄÏÇ∞Ï§ëÌïôÍµê', score: 2720, color: 'gray' },
    { rankEmoji: 'ü•â', name: 'Î∞ïÎâ¥Ïä§', school: 'ÎåÄÍµ¨Í≥†Îì±ÌïôÍµê', score: 2650, color: 'orange' },
  ];

  const handleStartGame = (gameType) => {
    if (gameType === 'summary') {
      navigate('/news-game');
    } else if (gameType === 'factcheck') {
      navigate('/fake-news-game');
    }
  };

  return (
    <>
    <Header/>
    <div className="body-bg">
      {/* Main Content */}
      <main className="container main-content">
        {/* Progress Section */}
        <section className="section-box">
          <h2 className="section-title">Ïò§ÎäòÏùò ÏßÑÌñâÏÉÅÌô©</h2>
          <div className="progress-grid">
            {[
              {
                icon: 'üì∞',
                label: 'Îâ¥Ïä§ ÏöîÏïΩ',
                progress: 60,
                current: 3,
                color: 'blue',
              },
              {
                icon: 'üîç',
                label: 'Í∞ÄÏßúÎâ¥Ïä§ Íµ¨Î≥Ñ',
                progress: 33,
                current: 1,
                color: 'red',
              },
            ].map((item, i) => (
              <div key={i} className="progress-box">
                <div className="progress-icon">{item.icon}</div>
                <div className="progress-label">{item.label}</div>
                <div className={`progress-value text-${item.color}`}>
                  {item.current}
                </div>
                <div className="progress-bar-bg">
                  <div
                    className={`progress-bar-fill bg-${item.color}`}
                    style={{ width: `${item.progress}%` }}
                  ></div>
                </div>
              </div>
            ))}
          </div>
        </section>

        {/* Challenge Cards */}
        <div className="card-grid">
          {[
            {
              title: 'Îâ¥Ïä§ Ìïú Ï§Ñ ÏöîÏïΩ',
              desc: 'Îâ¥Ïä§ Í∏∞ÏÇ¨Î•º ÏùΩÍ≥† ÌïµÏã¨ ÎÇ¥Ïö©ÏùÑ Ìïú Ï§ÑÎ°ú ÏöîÏïΩÌï¥Î≥¥ÏÑ∏Ïöî. AIÏôÄ ÎπÑÍµêÌïòÏó¨ Ï†êÏàòÎ•º Î∞õÏäµÎãàÎã§.',
              score: '+100Ï†ê',
              color: 'blue',
              onClick: () => handleStartGame('summary'),
            },
            
            {
              title: 'Í∞ÄÏßúÎâ¥Ïä§ Íµ¨Î≥Ñ',
              desc: 'ÏßÑÏßú Îâ¥Ïä§ÏôÄ AIÍ∞Ä ÏÉùÏÑ±Ìïú Í∞ÄÏßú Îâ¥Ïä§Î•º Íµ¨Î≥ÑÌï¥Î≥¥ÏÑ∏Ïöî.',
              score: '+100Ï†ê',
              color: 'red',
              onClick: () => handleStartGame('factcheck'),
            },
          ].map((card, i) => (
            <div key={i} className="challenge-card" onClick={card.onClick}>
              <div className="card-header">
                <h3>{card.title}</h3>
                <span className={`score-tag score-${card.color}`}>{card.score}</span>
              </div>
              <p className="card-desc">{card.desc}</p>
              <div className="card-footer">
                <button className={`challenge-btn btn-${card.color}`}>ÎèÑÏ†ÑÌïòÍ∏∞ ‚Üí</button>
              </div>
            </div>
          ))}
        </div>
        
      <div className="badges-rankings-container">
        {/* ÎÇ¥ Î±ÉÏßÄ */}
        <section className="badge-section card">
          <h3 className="section-title">ÎÇ¥ Î±ÉÏßÄ</h3>
          <div className="badge-grid">
            {badges.map((b, i) => (
              <div
                key={i}
                className={`badge-box ${b.active ? `badge-gradient-${b.gradient}` : 'badge-inactive'}`}
              >
                <div className="badge-emoji">{b.emoji}</div>
                <div className="badge-label">{b.label}</div>
              </div>
            ))}
          </div>
        </section>

        {/* Ïã§ÏãúÍ∞Ñ Îû≠ÌÇπ */}
        <section className="ranking-section card">
          <h3 className="section-title">Ïã§ÏãúÍ∞Ñ Îû≠ÌÇπ</h3>
          <div className="ranking-list">
            {rankings.map((r, i) => (
              <div
                key={i}
                className={`ranking-item ranking-bg-${r.color}`}
              >
                <div className="ranking-left">
                  <span className="ranking-emoji">{r.rankEmoji}</span>
                  <div>
                    <div className="ranking-name">{r.name}</div>
                    <div className="ranking-school">{r.school}</div>
                  </div>
                </div>
                <div className="ranking-score">{r.score.toLocaleString()}Ï†ê</div>
              </div>
            ))}
            <div className="ranking-more-btn-container">
              <button 
                className="ranking-more-btn"
                onClick={() => navigate('/ranking')}
              >
                Ï†ÑÏ≤¥ Îû≠ÌÇπ Î≥¥Í∏∞ ‚Üí
              </button>
            </div>
          </div>
        </section>
      </div>

        {/* Modal */}
        {modalVisible && (
          <div className="modal-overlay">
            <div className="modal">
              <div className="modal-header">
                <h2>{modalTitle}</h2>
                <button className="modal-close" onClick={closeModal}>
                  √ó
                </button>
              </div>
              <div className="modal-body">{modalContent}</div>
            </div>
          </div>
        )}
      </main>
      <Footer/>
    </div>
    </>
  );
}

export default Main;
